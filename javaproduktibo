import java.util.ArrayList;
import java.util.List;
import java.util.Scanner;
import java.util.Timer;
import java.util.TimerTask;
import java.text.SimpleDateFormat;
import java.util.Date;

public class PersonalTaskListWithAlarm {
    private static List<String> taskList = new ArrayList<>();
    private static Timer timer = new Timer();
    private static SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("Personal Task List");
            System.out.println("1. Add Task");
            System.out.println("2. View Tasks");
            System.out.println("3. View Number of Tasks");
            System.out.println("4. Delete Task");
            System.out.println("5. Set Alarm for Urgent Task");
            System.out.println("6. Exit");
            System.out.print("Enter your choice: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // Consume the newline character

            switch (choice) {
                case 1:
                    System.out.print("Enter the task: ");
                    String task = scanner.nextLine();
                    taskList.add(task);
                    System.out.println("Task added successfully!");
                    break;
                case 2:
                    if (taskList.isEmpty()) {
                        System.out.println("No tasks in the list.");
                    } else {
                        System.out.println("Tasks:");
                        for (int i = 0; i < taskList.size(); i++) {
                            System.out.println((i + 1) + ". " + taskList.get(i));
                        }
                    }
                    break;
                case 3:
                    int numberOfTasks = taskList.size();
                    System.out.println("Number of tasks in the list: " + numberOfTasks);
                    break;
                case 4:
                    if (taskList.isEmpty()) {
                        System.out.println("No tasks to delete.");
                    } else {
                        System.out.print("Enter the task number to delete: ");
                        int taskNumberToDelete = scanner.nextInt();
                        scanner.nextLine(); // Consume the newline character

                        if (taskNumberToDelete >= 1 && taskNumberToDelete <= taskList.size()) {
                            String deletedTask = taskList.remove(taskNumberToDelete - 1);
                            System.out.println("Task \"" + deletedTask + "\" deleted successfully!");
                        } else {
                            System.out.println("Invalid task number.");
                        }
                    }
                    break;
                case 5:
                    if (taskList.isEmpty()) {
                        System.out.println("No tasks available to set an alarm for.");
                    } else {
                        System.out.print("Enter the task number to set an alarm: ");
                        int taskNumber = scanner.nextInt();
                        scanner.nextLine(); // Consume the newline character

                        if (taskNumber >= 1 && taskNumber <= taskList.size()) {
                            System.out.print("Enter the date and time for the alarm (yyyy-MM-dd HH:mm:ss): ");
                            String alarmDateTimeStr = scanner.nextLine();
                            try {
                                Date alarmDateTime = dateFormat.parse(alarmDateTimeStr);

                                // Schedule the alarm for the specified task
                                timer.schedule(new TaskAlarm(taskList.get(taskNumber - 1)), alarmDateTime);

                                System.out.println("Alarm set for task \"" + taskList.get(taskNumber - 1) +
                                        "\" at " + alarmDateTimeStr);
                            } catch (Exception e) {
                                System.out.println("Invalid date and time format. Please use yyyy-MM-dd HH:mm:ss.");
                            }
                        } else {
                            System.out.println("Invalid task number.");
                        }
                    }
                    break;
                case 6:
                    // Cleanup and exit
                    timer.cancel();
                    scanner.close();
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
                    break;
            }
        }
    }

    static class TaskAlarm extends TimerTask {
        private String task;

        TaskAlarm(String task) {
            this.task = task;
        }

        @Override
        public void run() {
            System.out.println("ALARM: It's time for the urgent task - \"" + task + "\"!");
        }
    }
}
